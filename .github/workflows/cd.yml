name: CD

on:
  release:
    types: [ created ]

jobs:
  build:
    name: ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    environment: Unity build
    strategy:
      fail-fast: false
      matrix:
        # https://game.ci/docs/docker/versions/
        unityVersion:
          - 6000.2.7f2
        targetPlatform:
          - StandaloneWindows
          - StandaloneWindows64
#          - StandaloneLinux
          - StandaloneLinux64
#          - StandaloneOSXIntel
          - StandaloneOSX
          - Android
          - iOS
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}-
            Library-

      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}

      - name: Set TAG_NAME
        run: echo "TAG_NAME=${GITHUB_REF_NAME}" >> $GITHUB_ENV
        
      - name: Compress
        run: |
          cd build
          zip -r "../${{ matrix.targetPlatform }}-${{ env.TAG_NAME }}.zip" ${{ matrix.targetPlatform }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: Release ${{ env.TAG_NAME }}
          body: "Release for ${{ env.TAG_NAME }}"
          draft: false
          prerelease: false
          files: ${{ matrix.targetPlatform }}-${{ env.TAG_NAME }}.zip
